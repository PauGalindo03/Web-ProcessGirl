{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/components/auth/EstadoVerificacion.tsx"],"sourcesContent":["// src/components/auth/EstadoVerificacion.tsx\r\n'use client';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useState } from 'react';\r\n\r\nimport styles from './EstadoVerificacion.module.css';\r\n\r\nimport { useAlerta } from '@/context/AlertaContext';\r\nimport { resendVerificationEmail } from '@/services/authService';\r\n\r\ninterface EstadoVerificacionProps {\r\n  email: string;\r\n  isEmailVerified: boolean;\r\n  expiresAt?: string;\r\n}\r\n\r\nexport default function EstadoVerificacion({\r\n  email,\r\n  isEmailVerified,\r\n  expiresAt,\r\n}: EstadoVerificacionProps) {\r\n  const router = useRouter();\r\n  const { mostrarAlerta } = useAlerta();\r\n  const [cargando, setCargando] = useState(false);\r\n\r\n  const tiempoRestante = expiresAt\r\n    ? new Date(expiresAt).getTime() - Date.now()\r\n    : null;\r\n\r\n  const handleReenviar = async () => {\r\n    setCargando(true);\r\n    try {\r\n      const res = await resendVerificationEmail(email);\r\n      mostrarAlerta(res.message, 'success');\r\n    } catch (err: unknown) {\r\n      const mensaje =\r\n        err instanceof Error\r\n          ? err.message\r\n          : typeof err === 'object' && err !== null && 'message' in err\r\n          ? String((err as { message?: unknown }).message)\r\n          : 'Error al reenviar el correo.';\r\n      mostrarAlerta(mensaje, 'error');\r\n    } finally {\r\n      setCargando(false);\r\n    }\r\n  };\r\n\r\n  if (isEmailVerified) {\r\n    return (\r\n      <div className={styles.estado}>\r\n        <p>✅ Tu correo ya está verificado.</p>\r\n        <button type=\"button\" onClick={() => router.push('/auth/login')} className={styles.boton}>\r\n          Iniciar sesión\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (tiempoRestante !== null && tiempoRestante > 0) {\r\n    const minutos = Math.floor(tiempoRestante / 60000);\r\n    const segundos = Math.floor((tiempoRestante % 60000) / 1000);\r\n\r\n    return (\r\n      <div className={styles.estado}>\r\n        <p>⏳ Tu correo aún no está verificado.</p>\r\n        <p>\r\n          El enlace expira en <strong>{minutos}:{segundos.toString().padStart(2, '0')}</strong>\r\n        </p>\r\n        <button type=\"button\" onClick={handleReenviar} disabled={cargando} className={styles.boton}>\r\n          {cargando ? 'Reenviando...' : 'Reenviar correo de verificación'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.estado}>\r\n      <p>❌ El enlace de verificación ha expirado.</p>\r\n      <button type=\"button\" onClick={() => router.push('/auth/register')} className={styles.boton}>\r\n        Registrarme de nuevo\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;AAE7C;AACA;;;;;;AAIA;AACA;AAPA;;;;;;;AAee,SAAS,mBAAmB,EACzC,KAAK,EACL,eAAe,EACf,SAAS,EACe;IACxB,MAAM,SAAS,IAAA,8QAAS;IACxB,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,6IAAS;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAC;IAEzC,MAAM,iBAAiB,YACnB,IAAI,KAAK,WAAW,OAAO,KAAK,KAAK,GAAG,KACxC;IAEJ,MAAM,iBAAiB;QACrB,YAAY;QACZ,IAAI;YACF,MAAM,MAAM,MAAM,IAAA,yJAAuB,EAAC;YAC1C,cAAc,IAAI,OAAO,EAAE;QAC7B,EAAE,OAAO,KAAc;YACrB,MAAM,UACJ,eAAe,QACX,IAAI,OAAO,GACX,OAAO,QAAQ,YAAY,QAAQ,QAAQ,aAAa,MACxD,OAAO,AAAC,IAA8B,OAAO,IAC7C;YACN,cAAc,SAAS;QACzB,SAAU;YACR,YAAY;QACd;IACF;IAEA,IAAI,iBAAiB;QACnB,qBACE,6WAAC;YAAI,WAAW,OAAO,MAAM;;8BAC3B,6WAAC;8BAAE;;;;;;8BACH,6WAAC;oBAAO,MAAK;oBAAS,SAAS,IAAM,OAAO,IAAI,CAAC;oBAAgB,WAAW,OAAO,KAAK;8BAAE;;;;;;;;;;;;IAKhG;IAEA,IAAI,mBAAmB,QAAQ,iBAAiB,GAAG;QACjD,MAAM,UAAU,KAAK,KAAK,CAAC,iBAAiB;QAC5C,MAAM,WAAW,KAAK,KAAK,CAAC,AAAC,iBAAiB,QAAS;QAEvD,qBACE,6WAAC;YAAI,WAAW,OAAO,MAAM;;8BAC3B,6WAAC;8BAAE;;;;;;8BACH,6WAAC;;wBAAE;sCACmB,6WAAC;;gCAAQ;gCAAQ;gCAAE,SAAS,QAAQ,GAAG,QAAQ,CAAC,GAAG;;;;;;;;;;;;;8BAEzE,6WAAC;oBAAO,MAAK;oBAAS,SAAS;oBAAgB,UAAU;oBAAU,WAAW,OAAO,KAAK;8BACvF,WAAW,kBAAkB;;;;;;;;;;;;IAItC;IAEA,qBACE,6WAAC;QAAI,WAAW,OAAO,MAAM;;0BAC3B,6WAAC;0BAAE;;;;;;0BACH,6WAAC;gBAAO,MAAK;gBAAS,SAAS,IAAM,OAAO,IAAI,CAAC;gBAAmB,WAAW,OAAO,KAAK;0BAAE;;;;;;;;;;;;AAKnG","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/app/auth/verificacion/status/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\n\r\nimport styles from './VerificaCorreo.module.css';\r\n\r\nimport EstadoVerificacion from '@/components/auth/EstadoVerificacion';\r\nimport { useAlerta } from '@/context/AlertaContext';\r\nimport { checkVerificationStatus } from '@/services/authService';\r\n\r\nexport default function VerificacionStatus() {\r\n  const [email, setEmail] = useState('');\r\n  const [estado, setEstado] = useState<{\r\n    isEmailVerified: boolean;\r\n    expiresAt?: string;\r\n  } | null>(null);\r\n  const [cargando, setCargando] = useState(false);\r\n  const { mostrarAlerta } = useAlerta();\r\n\r\n  const revisarEstado = async () => {\r\n    setCargando(true);\r\n    try {\r\n      const data = await checkVerificationStatus(email);\r\n      setEstado(data);\r\n    } catch (err: unknown) {\r\n      const mensaje =\r\n        err instanceof Error\r\n          ? err.message\r\n          : typeof err === 'object' && err !== null && 'message' in err\r\n          ? String((err as { message?: unknown }).message)\r\n          : 'No se encontró el correo o hubo un error.';\r\n      mostrarAlerta(mensaje, 'error');\r\n    } finally {\r\n      setCargando(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <h2>Checar estado de verificación</h2>\r\n      <p>Ingresa el correo con el que te registraste:</p>\r\n\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Correo registrado\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        className={styles.input}\r\n      />\r\n\r\n      <button\r\n        onClick={revisarEstado}\r\n        disabled={cargando || !email}\r\n        className={styles.boton}\r\n      >\r\n        {cargando ? 'Verificando...' : 'Checar estado'}\r\n      </button>\r\n\r\n      {estado && (\r\n        <EstadoVerificacion\r\n          email={email}\r\n          isEmailVerified={estado.isEmailVerified}\r\n          expiresAt={estado.expiresAt}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;AAIA;AACA;AACA;AAPA;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,gVAAQ,EAAC;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,gVAAQ,EAG1B;IACV,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAC;IACzC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,6IAAS;IAEnC,MAAM,gBAAgB;QACpB,YAAY;QACZ,IAAI;YACF,MAAM,OAAO,MAAM,IAAA,yJAAuB,EAAC;YAC3C,UAAU;QACZ,EAAE,OAAO,KAAc;YACrB,MAAM,UACJ,eAAe,QACX,IAAI,OAAO,GACX,OAAO,QAAQ,YAAY,QAAQ,QAAQ,aAAa,MACxD,OAAO,AAAC,IAA8B,OAAO,IAC7C;YACN,cAAc,SAAS;QACzB,SAAU;YACR,YAAY;QACd;IACF;IAEA,qBACE,6WAAC;QAAQ,WAAW,OAAO,SAAS;;0BAClC,6WAAC;0BAAG;;;;;;0BACJ,6WAAC;0BAAE;;;;;;0BAEH,6WAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,WAAW,OAAO,KAAK;;;;;;0BAGzB,6WAAC;gBACC,SAAS;gBACT,UAAU,YAAY,CAAC;gBACvB,WAAW,OAAO,KAAK;0BAEtB,WAAW,mBAAmB;;;;;;YAGhC,wBACC,6WAAC,2JAAkB;gBACjB,OAAO;gBACP,iBAAiB,OAAO,eAAe;gBACvC,WAAW,OAAO,SAAS;;;;;;;;;;;;AAKrC","debugId":null}}]
}