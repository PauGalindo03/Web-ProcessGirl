{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/auth/Form.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"boton\": \"Form-module__Bv6O0W__boton\",\n  \"direccion\": \"Form-module__Bv6O0W__direccion\",\n  \"form\": \"Form-module__Bv6O0W__form\",\n  \"input\": \"Form-module__Bv6O0W__input\",\n  \"link\": \"Form-module__Bv6O0W__link\",\n  \"subtitulo\": \"Form-module__Bv6O0W__subtitulo\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useContext } from \"react\";\r\n\r\nimport type { AuthContextType } from \"@/context/AuthContext\"; // 👈 importar el tipo solo para tipar\r\n\r\nimport { AuthContext } from \"@/context/AuthContext\"; // 👈 importar el contexto, no el tipo\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error(\"useAuth debe usarse dentro de AuthProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAIA,8NAAqD,sCAAsC;;;AAEpF,MAAM,UAAU;IACrB,MAAM,UAAU,IAAA,kVAAU,EAAC,6IAAW;IACtC,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/components/auth/RegisterForm.tsx"],"sourcesContent":["\"use client\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useState } from \"react\";\r\n\r\nimport styles from \"./Form.module.css\";\r\n\r\nimport { useAlerta } from \"@/context/AlertaContext\";\r\nimport { useAuth } from \"@/hooks/useAuth\";\r\n\r\nexport default function RegisterForm() {\r\n  const { registerUser } = useAuth();\r\n  const { mostrarAlerta } = useAlerta();\r\n  const router = useRouter();\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    nombres: \"\",\r\n    apellidos: \"\",\r\n    username: \"\",\r\n    direccion: {\r\n      pais: \"\",\r\n      calle: \"\",\r\n      numero: \"\",\r\n      colonia: \"\",\r\n      codigoPostal: \"\",\r\n      ciudad: \"\",\r\n      estado: \"\",\r\n    },\r\n  });\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await registerUser(form);\r\n      mostrarAlerta(\"Registro exitoso. Verifica tu correo.\", \"success\");\r\n      router.push(`/auth/verificacion/correo?email=${encodeURIComponent(form.email)}`);\r\n    } catch (err) {\r\n      const mensaje =\r\n        err instanceof Error ? err.message : \"Error al registrar.\";\r\n      mostrarAlerta(mensaje, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className={styles.form}>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={form.nombres}\r\n        onChange={(e) => setForm({ ...form, nombres: e.target.value })}\r\n        placeholder=\"*Nombres\"\r\n        required\r\n      />\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={form.apellidos}\r\n        onChange={(e) => setForm({ ...form, apellidos: e.target.value })}\r\n        placeholder=\"*Apellidos\"\r\n        required\r\n      />\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={form.username}\r\n        onChange={(e) => setForm({ ...form, username: e.target.value })}\r\n        placeholder=\"Username\"\r\n      />\r\n      <input\r\n        className={styles.input}\r\n        type=\"email\"\r\n        value={form.email}\r\n        onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n        placeholder=\"*Correo\"\r\n        required\r\n      />\r\n      <input\r\n        className={styles.input}\r\n        type=\"password\"\r\n        value={form.password}\r\n        onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n        placeholder=\"*Contraseña\"\r\n        required\r\n      />\r\n\r\n      {/* 🏠 Sección de dirección */}\r\n      <section className={styles.direccion}>\r\n        <h3 className={styles.subtitulo}>Dirección</h3>\r\n        {[\r\n          { key: \"pais\", label: \"*País\", required: true },\r\n          { key: \"estado\", label: \"Estado\" },\r\n          { key: \"ciudad\", label: \"Ciudad\" },\r\n          { key: \"colonia\", label: \"Colonia\" },\r\n          { key: \"calle\", label: \"Calle\" },\r\n          { key: \"numero\", label: \"Número\" },\r\n          { key: \"codigoPostal\", label: \"Código Postal\" },\r\n        ].map(({ key, label, required }) => (\r\n          <input\r\n            key={key}\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={form.direccion[key as keyof typeof form.direccion]}\r\n            onChange={(e) =>\r\n              setForm({\r\n                ...form,\r\n                direccion: {\r\n                  ...form.direccion,\r\n                  [key]: e.target.value,\r\n                },\r\n              })\r\n            }\r\n            placeholder={label}\r\n            required={required}\r\n          />\r\n        ))}\r\n      </section>\r\n\r\n      <button className={styles.boton} type=\"submit\">\r\n        Registrarme\r\n      </button>\r\n      <a href=\"/auth/login\" className={styles.link}>\r\n        ¿Ya tienes cuenta? Inicia sesión\r\n      </a>\r\n      <a href=\"/auth/verificacion/status\" className={styles.link}>\r\n        ¿Ya te registraste pero no te llegó el correo?\r\n      </a>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/app/auth/register/page.tsx"],"sourcesContent":["'use client';\r\nimport styles from '@/app/auth/AuthLayout.module.css'\r\nimport RegisterForm from '@/components/auth/RegisterForm';\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <section>\r\n      <h1 className={styles.titulo}>Crear cuenta</h1>\r\n      <RegisterForm />\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,qBACE,6WAAC;;0BACC,6WAAC;gBAAG,WAAW,uJAAM,CAAC,MAAM;0BAAE;;;;;;0BAC9B,6WAAC,qJAAY;;;;;;;;;;;AAGnB","debugId":null}}]
}