{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/auth/RegisterForm.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"form\": \"RegisterForm-module__S7ujnq__form\",\n  \"link\": \"RegisterForm-module__S7ujnq__link\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useContext } from \"react\";\r\n\r\nimport type { AuthContextType } from \"@/context/AuthContext\"; // 👈 importar el tipo solo para tipar\r\n\r\nimport { AuthContext } from \"@/context/AuthContext\"; // 👈 importar el contexto, no el tipo\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error(\"useAuth debe usarse dentro de AuthProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAIA,8NAAqD,sCAAsC;;;AAEpF,MAAM,UAAU;IACrB,MAAM,UAAU,IAAA,kVAAU,EAAC,6IAAW;IACtC,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/components/auth/RegisterForm.tsx"],"sourcesContent":["'use client';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useState } from 'react';\r\n\r\nimport styles from './RegisterForm.module.css';\r\n\r\nimport Alerta from '@/components/common/feedback/Alerta';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\n\r\nexport default function RegisterForm() {\r\n  const { registerUser, error } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const [form, setForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    nombres: '',\r\n    apellidos: '',\r\n    username: '',\r\n    direccion: {\r\n      pais: '',\r\n      calle: '',\r\n      numero: '',\r\n      colonia: '',\r\n      codigoPostal: '',\r\n      ciudad: '',\r\n      estado: '',\r\n    },\r\n  });\r\n\r\n  const [mostrarAlerta, setMostrarAlerta] = useState(false);\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await registerUser(form);\r\n      router.push('/auth/login');\r\n    } catch (err) {\r\n      console.error(\"Error al registrar\", err);\r\n      setMostrarAlerta(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {mostrarAlerta && error && (\r\n        <Alerta tipo=\"error\" mensaje={error} onClose={() => setMostrarAlerta(false)} />\r\n      )}\r\n\r\n      <form onSubmit={handleRegister} className={styles.form}>\r\n        <input\r\n          type=\"text\"\r\n          value={form.nombres}\r\n          onChange={(e) => setForm({ ...form, nombres: e.target.value })}\r\n          placeholder=\"Nombres\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={form.apellidos}\r\n          onChange={(e) => setForm({ ...form, apellidos: e.target.value })}\r\n          placeholder=\"Apellidos\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={form.username}\r\n          onChange={(e) => setForm({ ...form, username: e.target.value })}\r\n          placeholder=\"Username\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={form.email}\r\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n          placeholder=\"Correo\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={form.password}\r\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n          placeholder=\"Contraseña\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={form.direccion.pais}\r\n          onChange={(e) =>\r\n            setForm({\r\n              ...form,\r\n              direccion: { ...form.direccion, pais: e.target.value },\r\n            })\r\n          }\r\n          placeholder=\"País\"\r\n          required\r\n        />\r\n        {/* Puedes agregar más campos de dirección aquí */}\r\n        <button type=\"submit\">Registrarme</button>\r\n\r\n        <a href=\"/auth/login\" className={styles.link}>\r\n          ¿Ya tienes cuenta? Inicia sesión\r\n        </a>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;AAEA;AACA;AAPA;;;;;;;AAUe,SAAS;IACtB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,IAAA,kIAAO;IACvC,MAAM,SAAS,IAAA,8QAAS;IAExB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,gVAAQ,EAAC;QAC/B,OAAO;QACP,UAAU;QACV,SAAS;QACT,WAAW;QACX,UAAU;QACV,WAAW;YACT,MAAM;YACN,OAAO;YACP,QAAQ;YACR,SAAS;YACT,cAAc;YACd,QAAQ;YACR,QAAQ;QACV;IACF;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,gVAAQ,EAAC;IAEnD,MAAM,iBAAiB,OAAO;QAC5B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,aAAa;YACnB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,sBAAsB;YACpC,iBAAiB;QACnB;IACF;IAEA,qBACE;;YACG,iBAAiB,uBAChB,6WAAC,6JAAM;gBAAC,MAAK;gBAAQ,SAAS;gBAAO,SAAS,IAAM,iBAAiB;;;;;;0BAGvE,6WAAC;gBAAK,UAAU;gBAAgB,WAAW,gKAAM,CAAC,IAAI;;kCACpD,6WAAC;wBACC,MAAK;wBACL,OAAO,KAAK,OAAO;wBACnB,UAAU,CAAC,IAAM,QAAQ;gCAAE,GAAG,IAAI;gCAAE,SAAS,EAAE,MAAM,CAAC,KAAK;4BAAC;wBAC5D,aAAY;wBACZ,QAAQ;;;;;;kCAEV,6WAAC;wBACC,MAAK;wBACL,OAAO,KAAK,SAAS;wBACrB,UAAU,CAAC,IAAM,QAAQ;gCAAE,GAAG,IAAI;gCAAE,WAAW,EAAE,MAAM,CAAC,KAAK;4BAAC;wBAC9D,aAAY;wBACZ,QAAQ;;;;;;kCAEV,6WAAC;wBACC,MAAK;wBACL,OAAO,KAAK,QAAQ;wBACpB,UAAU,CAAC,IAAM,QAAQ;gCAAE,GAAG,IAAI;gCAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4BAAC;wBAC7D,aAAY;;;;;;kCAEd,6WAAC;wBACC,MAAK;wBACL,OAAO,KAAK,KAAK;wBACjB,UAAU,CAAC,IAAM,QAAQ;gCAAE,GAAG,IAAI;gCAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4BAAC;wBAC1D,aAAY;wBACZ,QAAQ;;;;;;kCAEV,6WAAC;wBACC,MAAK;wBACL,OAAO,KAAK,QAAQ;wBACpB,UAAU,CAAC,IAAM,QAAQ;gCAAE,GAAG,IAAI;gCAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4BAAC;wBAC7D,aAAY;wBACZ,QAAQ;;;;;;kCAEV,6WAAC;wBACC,MAAK;wBACL,OAAO,KAAK,SAAS,CAAC,IAAI;wBAC1B,UAAU,CAAC,IACT,QAAQ;gCACN,GAAG,IAAI;gCACP,WAAW;oCAAE,GAAG,KAAK,SAAS;oCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;gCAAC;4BACvD;wBAEF,aAAY;wBACZ,QAAQ;;;;;;kCAGV,6WAAC;wBAAO,MAAK;kCAAS;;;;;;kCAEtB,6WAAC;wBAAE,MAAK;wBAAc,WAAW,gKAAM,CAAC,IAAI;kCAAE;;;;;;;;;;;;;;AAMtD","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pauli/Desktop/Digital_Nest/Proyects/Process_Girl/process_girl_web/frontend/src/app/auth/register/page.tsx"],"sourcesContent":["'use client';\r\nimport RegisterForm from '@/components/auth/RegisterForm';\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <section>\r\n      <h1>Crear cuenta</h1>\r\n      <RegisterForm />\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBACE,6WAAC;;0BACC,6WAAC;0BAAG;;;;;;0BACJ,6WAAC,qJAAY;;;;;;;;;;;AAGnB","debugId":null}}]
}